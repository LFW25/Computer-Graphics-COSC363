#version 400

layout(quads, equal_spacing, ccw) in;
uniform mat4 mvpMatrix;

void main()
{
    vec4 posn = vec4(0); 
    float u = gl_TessCoord.x;
    float v = gl_TessCoord.y;

    //Complete the following equation and 
    //uncomment the statement:
    posn = (1-v)*(1-v)*(1-v)*((1-u)*(1-u)*(1-u)*gl_in[0].gl_Position + 3*u*(1-u)*(1-u)*gl_in[1].gl_Position + 3*u*u*(1-u)*gl_in[2].gl_Position + u*u*u*gl_in[3].gl_Position) + 
            3*v*(1-v)*(1-v)*((1-u)*(1-u)*(1-u)*gl_in[4].gl_Position + 3*u*(1-u)*(1-u)*gl_in[5].gl_Position + 3*u*u*(1-u)*gl_in[6].gl_Position + u*u*u*gl_in[7].gl_Position) +
            3*v*v*(1-v)*((1-u)*(1-u)*(1-u)*gl_in[8].gl_Position + 3*u*(1-u)*(1-u)*gl_in[9].gl_Position + 3*u*u*(1-u)*gl_in[10].gl_Position + u*u*u*gl_in[11].gl_Position) +
            v*v*v*((1-u)*(1-u)*(1-u)*gl_in[12].gl_Position + 3*u*(1-u)*(1-u)*gl_in[13].gl_Position + 3*u*u*(1-u)*gl_in[14].gl_Position + u*u*u*gl_in[15].gl_Position);
   
    gl_Position = mvpMatrix * posn;
	
}
